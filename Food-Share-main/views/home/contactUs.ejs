<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Us</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom CSS for additional styling */
        .color-theme {
            color: #ffb700; /* Theme color for headings */
        }

        .bg-white {
            background-color: #fff;
            border-radius: 10px;
        }

        .shadow {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow effect */
        }

        .fs-5 {
            font-size: 1.25rem; /* Slightly larger font size */
        }

        mark {
            background-color: #fff3cd; /* Highlight color for email */
            padding: 0.2em 0.4em;
            border-radius: 4px;
        }

        ul {
            list-style-type: none; /* Remove default bullet points */
            padding-left: 0;
        }

        
        
        a {
            color: #ffa200;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        .form-section {
            margin-top: 30px;
        }

        .form-section h2 {
            color: #ffbb00;
            margin-bottom: 20px;
        }

        .form-control {
            margin-bottom: 15px;
        }

        .btn-primary {
            background-color: #ffaa00;
            border: none;
        }

        .btn-primary:hover {
            background-color: #b38900;
        }

        /* Chatbot Styles */
        .chatbot-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 350px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: none; /* Hidden by default */
        }

        .chatbot-header {
            background: #ffb300;
            color: #fff;
            padding: 10px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            text-align: center;
        }

        .chatbot-body {
            padding: 10px;
            height: 300px;
            overflow-y: auto;
            border-bottom: 1px solid #ddd;
        }

        .chatbot-footer {
            padding: 10px;
        }

        .chatbot-footer input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .chatbot-toggle {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #ffc800;
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .message {
            margin-bottom: 10px;
        }

        .user-message {
            text-align: right;
        }

        .bot-message {
            text-align: left;
        }

        .message p {
            display: inline-block;
            padding: 8px 12px;
            border-radius: 10px;
            max-width: 80%;
        }

        .user-message p {
            background: #007BFF;
            color: #fff;
        }

        .bot-message p {
            background: #f1f1f1;
            color: #333;
        }
    </style>
</head>
<body>
  
	<form
	action="https://formspree.io/f/xnnjwpgr"
	method="POST"
  >
	
  
        <!-- New Form Section -->
        <div class="form-section bg-white m-4 p-4 shadow">
            <h2 class="text-center">Have a Question? Get in Touch!</h2>
            <form>
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" placeholder="Enter your name" required>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email Address</label>
                    <input type="email" class="form-control" id="email" placeholder="Enter your email" name="email" required>
                </div>
                <div class="mb-3">
                    <label for="question" class="form-label">Your Question</label>
                    <textarea class="form-control" id="question" name="message" rows="4" placeholder="Enter your question" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>

    <!-- Chatbot Toggle Button -->
    <button class="chatbot-toggle" onclick="toggleChatbot()">ðŸ’¬</button>

    <!-- Chatbot Container -->
    <div class="chatbot-container" id="chatbotContainer">
        <div class="chatbot-header">
            <h5>Bite Talks</h5>
        </div>
        <div class="chatbot-body" id="chatbotBody">
            <!-- Chat messages will appear here -->
        </div>
        <div class="chatbot-footer">
            <input type="text" id="userInput" placeholder="Type your message..." onkeypress="handleKeyPress(event)">
        </div>
    </div>

    <!-- JavaScript -->
    <script>
        // Toggle chatbot visibility
        function toggleChatbot() {
            const chatbotContainer = document.getElementById('chatbotContainer');
            chatbotContainer.style.display = chatbotContainer.style.display === 'none' ? 'block' : 'none';
        }

        // Handle user input
        async function handleKeyPress(event) {
            if (event.key === 'Enter') {
                const userInput = document.getElementById('userInput');
                const userMessage = userInput.value.trim();

                if (userMessage) {
                    // Display user message
                    displayMessage(userMessage, 'user');

                    // Clear input
                    userInput.value = '';

                    // Get bot response
                    const botResponse = await getBotResponse(userMessage);

                    // Display bot response
                    displayMessage(botResponse, 'bot');
                }
            }
        }

        // Display a message in the chat
        function displayMessage(message, sender) {
            const chatbotBody = document.getElementById('chatbotBody');
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', `${sender}-message`);
            messageElement.innerHTML = `<p>${message}</p>`;
            chatbotBody.appendChild(messageElement);

            // Scroll to bottom
            chatbotBody.scrollTop = chatbotBody.scrollHeight;
        }

        // Get bot response from Gemini API
        // Get bot response from Gemini API
async function getBotResponse(userMessage) {
    const apiKey = 'AIzaSyClXpefEnnDhY_568n_3wMhlPlurJOe3gc'; // Replace with your Gemini API key
    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`;

    try {
        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                contents: [
                    {
                        parts: [
                            {
                                text: userMessage // Use the user's message here
                            }
                        ]
                    }
                ]
            })
        });

        if (!response.ok) {
            const errorData = await response.json();
            console.error('API Error:', errorData);
            return 'Sorry, there was an error processing your request.';
        }

        const data = await response.json();
        console.log(data); // Log the full response for debugging

        // Extract the bot's response from the API response
        if (data.candidates && data.candidates.length > 0) {
            return data.candidates[0].content.parts[0].text; // Return the bot's response
        } else {
            return 'Sorry, I could not generate a response.';
        }
    } catch (error) {
        console.error('Error fetching bot response:', error);
        return 'Sorry, I am unable to respond at the moment.';
    }
}
             
    </script>

    <!-- Bootstrap JS (for interactive components) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>